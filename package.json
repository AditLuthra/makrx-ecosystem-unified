{
  "name": "@makrx/ecosystem-unified",
  "version": "1.0.0",
  "private": true,
  "description": "MakrX Ecosystem - Unified monorepo for all MakrX applications and services",
  "workspaces": [
    "apps/*",
    "packages/*"
  ],
  "scripts": {
    "dev": "concurrently \"npm run dev:infrastructure\" \"npm run dev:apps\" \"npm run dev:backends\"",
    "dev:simple": "./start-simple-dev.sh",
    "stop": "./stop.sh",
    "diagnose": "./diagnose.sh",
    "build": "npm run build:apps",
    "test": "npm run test:unit && npm run test:integration",
    "lint": "npm run lint --workspaces --if-present",
    "clean": "npm run clean --workspaces --if-present && rimraf node_modules/.cache",
    "docker:dev": "docker-compose up --build",
    "docker:prod": "docker-compose -f docker-compose.prod.yml up --build -d",
    "docker:down": "docker-compose down -v",
    "setup": "npm ci && npm run setup:env && npm run setup:infrastructure",
    "dev:apps": "concurrently \"npm run dev --workspace=apps/gateway-frontend\" \"npm run dev --workspace=apps/gateway-frontend-hacker\" \"npm run dev --workspace=apps/makrcave\" \"npm run dev --workspace=apps/makrx-store\" \"npm run dev --workspace=apps/makrx-events\"",
    "dev:backends": "concurrently \"PYTHONPATH=/home/adit/Downloads/MakrX-AI/makrx-ecosystem-unified backends/makrcave/venv/bin/pip install -r backends/makrcave/requirements.txt && PYTHONPATH=/home/adit/Downloads/MakrX-AI/makrx-ecosystem-unified backends/makrcave/venv/bin/python -m uvicorn backends.makrcave.main:app --host 0.0.0.0 --port 8001 --reload\" \"PYTHONPATH=/home/adit/Downloads/MakrX-AI/makrx-ecosystem-unified backends/makrx_events/venv/bin/pip install -r backends/makrx_events/requirements.txt && PYTHONPATH=/home/adit/Downloads/MakrX-AI/makrx-ecosystem-unified backends/makrx_events/venv/bin/python -m uvicorn backends.makrx_events.main:app --host 0.0.0.0 --port 8002 --reload\" \"PYTHONPATH=/home/adit/Downloads/MakrX-AI/makrx-ecosystem-unified backends/makrx_store/venv/bin/pip install -r backends/makrx_store/requirements.txt && PYTHONPATH=/home/adit/Downloads/MakrX-AI/makrx-ecosystem-unified backends/makrx_store/venv/bin/python -m uvicorn backends.makrx_store.main:app --host 0.0.0.0 --port 8003 --reload\"",
    "dev:infrastructure": "docker-compose up -d postgres redis keycloak minio",
    "build:apps": "npm run build --workspaces --if-present",
    "test:unit": "npm run test --workspaces --if-present",
    "test:integration": "jest --config=jest.integration.config.js",
    "test:e2e": "playwright test",
    "lint:fix": "npm run lint:fix --workspaces --if-present",
    "prettier": "prettier --write \"**/*.{js,jsx,ts,tsx,json,css,scss,md}\"",
    "prettier:check": "prettier --check \"**/*.{js,jsx,ts,tsx,json,css,scss,md}\"",
    "type-check": "npm run type-check --workspaces --if-present",
    "db:migrate": "cd backends/makrcave && PYTHONPATH=../.. ./venv/bin/alembic upgrade head && cd ../makrx_store && if [ -z \"$DATABASE_URL\" ]; then echo 'WARNING: Skipping MakrX Store migrations. Set DATABASE_URL to your Postgres connection string first.'; else PYTHONPATH=../.. ./venv/bin/alembic upgrade head; fi && cd ../makrx_events && PYTHONPATH=../.. ./venv/bin/alembic upgrade head",
    "db:seed": "npm run db:seed:makrcave && npm run db:seed:store && npm run db:seed:events",
    "db:seed:makrcave": "cd backends/makrcave && PYTHONPATH=../.. ./venv/bin/python seed.py",
    "db:seed:store": "cd backends/makrx_store && if [ -z \"$DATABASE_URL\" ]; then echo 'WARNING: Skipping MakrX Store seed. Set DATABASE_URL before seeding.'; else PYTHONPATH=../.. ./venv/bin/python seed_data.py; fi",
    "db:seed:events": "echo 'No seed for events backend' && exit 0",
    "docker:logs": "docker-compose logs -f",
    "docker:clean": "docker system prune -af && docker volume prune -f",
    "setup:env": "node scripts/setup-env.js",
    "setup:infrastructure": "docker-compose up -d && sleep 30 && npm run db:migrate",
    "fresh": "npm run clean && npm ci && npm run build",
    "validate": "npm run lint && npm run type-check && npm run test:unit",
    "validate:ci": "npm run validate && npm run build && npm run test:integration"
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=8.0.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.1",
    "@next/env": "^14.2.5",
    "@types/chai": "^5.2.2",
    "@types/d3-array": "^3.2.2",
    "@types/d3-color": "^3.1.3",
    "@types/d3-ease": "^3.0.2",
    "@types/d3-interpolate": "^3.0.4",
    "@types/d3-path": "^3.1.1",
    "@types/d3-scale": "^4.0.9",
    "@types/d3-shape": "^3.1.7",
    "@types/d3-time": "^3.0.4",
    "@types/d3-timer": "^3.0.2",
    "@types/deep-eql": "^4.0.2",
    "@types/estree": "^1.0.8",
    "@types/json-schema": "^7.0.15",
    "@types/json5": "^0.0.30",
    "@types/node": "^20.19.14",
    "@types/pg": "^8.15.5",
    "@types/prop-types": "^15.7.15",
    "@types/qrcode": "^1.5.5",
    "@types/react": "^18.3.0",
    "@types/react-dom": "^18.3.0",
    "@types/semver": "^7.7.1",
    "@types/stats.js": "^0.17.4",
    "@types/three": "^0.180.0",
    "@types/webxr": "^0.5.23",
    "@types/ws": "^8.18.1",
    "concurrently": "^8.2.2",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^9.1.0",
    "next": "14.2.32",
    "prettier": "^3.1.0",
    "rimraf": "^5.0.5",
    "@sentry/nextjs": "^7.x.x",
    "@sentry/react": "^7.x.x"
  },
  "overrides": {
    "react": "18.3.1",
    "react-dom": "18.3.1"
  },
  "dependencies": {
    "@radix-ui/react-accordion": "^1.2.12",
    "@radix-ui/react-alert-dialog": "^1.1.15",
    "@radix-ui/react-aspect-ratio": "^1.1.7",
    "@radix-ui/react-collapsible": "^1.1.12",
    "@radix-ui/react-context-menu": "^2.2.16",
    "@radix-ui/react-hover-card": "^1.1.15",
    "@radix-ui/react-menubar": "^1.1.16",
    "@radix-ui/react-navigation-menu": "^1.2.14",
    "@radix-ui/react-scroll-area": "^1.2.10",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slider": "^1.3.6",
    "@radix-ui/react-toggle": "^1.1.10",
    "@radix-ui/react-toggle-group": "^1.1.11",
    "@radix-ui/react-tooltip": "^1.2.8",
    "buffer": "^6.0.3",
    "cmdk": "^1.1.1",
    "crypto-browserify": "^3.12.1",
    "drizzle-orm": "^0.44.5",
    "drizzle-zod": "^0.8.3",
    "embla-carousel-react": "^8.6.0",
    "input-otp": "^1.4.2",
    "next-auth": "^4.24.11",
    "pg": "^8.16.3",
    "process": "^0.11.10",
    "react-day-picker": "^9.9.0",
    "react-hook-form": "^7.62.0",
    "react-resizable-panels": "^3.0.5",
    "sonner": "^2.0.7",
    "stream-browserify": "^3.0.0",
    "three": "^0.180.0",
    "typescript": "^5.3.3",
    "vaul": "^1.1.2",
    "vitest": "^3.2.4",
    "web-vitals": "^5.1.0",
    "zod": "^4.1.5"
  },
  "keywords": [
    "makrx",
    "ecosystem",
    "monorepo",
    "next.js",
    "fastapi",
    "keycloak",
    "postgresql",
    "redis",
    "event-management",
    "marketplace",
    "community-platform"
  ],
  "author": "MakrX Team",
  "license": "MIT"
}
